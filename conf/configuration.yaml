server:
  requestLog:
    appenders:
      - type: file
        currentLogFilename: ${ARLAS_UMS_ACCESS_LOG_FILE:-arlas-ums-access.log}
        archivedLogFilenamePattern: ${ARLAS_UMS_LOG_FILE_ARCHIVE:-arlas-ums-access-%d.log.gz}
  registerDefaultExceptionMappers: false
  type: simple
  rootPath: ${ARLAS_UMS_PREFIX:-/arlas_idp_server}
  applicationContextPath: ${ARLAS_UMS_APP_PATH:-/}
  adminContextPath: ${ARLAS_UMS_ADMIN_PATH:-/admin}
  connector:
    type: http
    port: ${ARLAS_UMS_PORT:-9997}
  maxThreads: ${ARLAS_UMS_MAX_THREADS:-1024}
  minThreads: ${ARLAS_UMS_MIN_THREADS:-8}
  maxQueuedRequests: ${ARLAS_UMS_MAX_QUEUED_REQUESTS:-1024}

logging:
  level: ${ARLAS_UMS_LOGGING_LEVEL:-INFO}
  loggers:
    "javax.management.mbeanserver": ${ARLAS_UMS_LOGGING_MBEAN_LEVEL:-INFO}
    "org.hibernate": ${ARLAS_UMS_LOGGING_HIBERNATE_LEVEL:-INFO}
  appenders:
    - type: console
      threshold:  ${ARLAS_UMS_LOGGING_CONSOLE_LEVEL:-INFO}
    - type: file
      currentLogFilename: ${ARLAS_UMS_LOGGING_FILE:-arlas-ums.log}
      threshold: ${ARLAS_UMS_LOGGING_FILE_LEVEL:-INFO}
      archive: ${ARLAS_UMS_LOGGING_FILE_ARCHIVE:-true}
      archivedLogFilenamePattern: ${ARLAS_UMS_LOGGING_FILE_ARCHIVE_FILE_PATTERN:-arlas-ums-%d.log}
      archivedFileCount: ${ARLAS_UMS_LOGGING_FILE_ARCHIVE_FILE_COUNT:-5}

swagger: # Configuration of SWAGGER for generating documentation and APIs
  resourcePackage: io.arlas.ums.rest.service # The java package to process for extracting the APIs
  # temporary patch for bug https://github.com/smoketurner/dropwizard-swagger/issues/206
  # to be removed when version of dropwizard.swagger.version is upgraded
  customJavascript: ${ARLAS_UMS_CUSTOM_JS:-/arlas_idp_server/swagger-static/custom-request-interceptor.js}

arlas_cors:
  enabled: ${ARLAS_CORS_ENABLED:-true}
  allowed_origins: ${ARLAS_CORS_ALLOWED_ORIGINS:-"*"}
  allowed_headers: ${ARLAS_CORS_ALLOWED_HEADERS:-"arlas-user,arlas-groups,arlas-organization,X-Requested-With,Content-Type,Accept,Origin,Authorization,WWW-Authenticate"}
  allowed_methods: ${ARLAS_CORS_ALLOWED_METHODS:-"OPTIONS,GET,PUT,POST,DELETE,HEAD"}
  allowed_credentials: ${ARLAS_CORS_ALLOWED_CREDENTIALS:-true}
  exposed_headers: ${ARLAS_CORS_EXPOSED_HEADERS:-"Content-Type,Authorization,X-Requested-With,Content-Length,Accept,Origin,Location,WWW-Authenticate"}

arlas_auth:
  type: auth
  access_token_ttl: ${ARLAS_ACCESS_TOKEN_TTL:-600000}
  refresh_token_ttl: ${ARLAS_REFRESH_TOKEN_TTL:-3600000}
  permission_url: ${ARLAS_AUTH_PERMISSION_URL:-http://arlas-idp-server/arlas_idp_server/permissions}
  public_uris: [${ARLAS_AUTH_PUBLIC_URIS:-swagger,swagger.*,session:POST,users:POST,users/.*:POST,permissions:GET}]
  # deprecated, use it only for Integration tests
  certificate_file: ${ARLAS_AUTH_CERT_FILE:-/opt/app/arlas.pem}
  certificate_url: ${ARLAS_AUTH_CERT_URL:-}
  header_user: ${ARLAS_HEADER_USER:-arlas-user}
  header_group: ${ARLAS_HEADER_GROUP:-arlas-groups}
  claim_roles: ${ARLAS_CLAIM_ROLES:-http://arlas.io/roles}
  claim_permissions: ${ARLAS_CLAIM_PERMISSIONS:-http://arlas.io/permissions}
  keycloak:
    realm: ${ARLAS_AUTH_KEYCLOAK_REALM:-arlas}
    auth-server-url: ${ARLAS_AUTH_KEYCLOAK_URL:-http://keycloak:8080/auth}
    resource: ${ARLAS_AUTH_KEYCLOAK_RESOURCE:-arlas}
    credentials:
      secret: ${ARLAS_AUTH_KEYCLOAK_SECRET:-2ec98d5c-7a6d-4f7f-9214-99d0a4ba3907}

arlas_organization_header: ${ARLAS_ORGANIZATION_HEADER:-arlas-organization}
anonymous_value: ${ARLAS_ANONYMOUS_VALUE:-anonymous}
# set this to "false" if you don't want new users to verify their email
verify_email: ${ARLAS_UMS_VERIFY_EMAIL:-true}

database:
  # the name of your JDBC driver
  driverClass: ${ARLAS_UMS_HIBERNATE_DRIVER:-org.postgresql.Driver}
  user: ${ARLAS_UMS_HIBERNATE_USER:-pg-user}
  password: ${ARLAS_UMS_HIBERNATE_PASSWORD:-iAMs00perSecrEET}
  # the JDBC URL
  url: ${ARLAS_UMS_HIBERNATE_URL:-jdbc:postgresql://localhost:5432/arlas_ums}
  # any properties specific to your JDBC driver:
  properties:
    charSet: UTF-8
    hibernate.dialect: ${ARLAS_UMS_HIBERNATE_DIALECT:-org.hibernate.dialect.PostgreSQLDialect}
    hibernate.hbm2ddl.auto: ${ARLAS_UMS_HIBERNATE_HBM2DDL:-update}
    hibernate.session.events.log: false
  # the maximum amount of time to wait on an empty pool before throwing an exception
  maxWaitForConnection: 1s
  # the SQL query to run when validating a connection's liveness
  validationQuery: "/* MyApplication Health Check */ SELECT 1"
  # the minimum number of connections to keep open
  minSize: 8
  # the maximum number of connections to keep open
  maxSize: 32
  # whether or not idle connections should be validated
  checkConnectionWhileIdle: false

# SMTP configuration. Used to send account verification email.
smtp:
  activated: ${ARLAS_SMTP_ACTIVATED:-false}
  host: ${ARLAS_SMTP_HOST:-}
  port: ${ARLAS_SMTP_PORT:-25}
  username: ${ARLAS_SMTP_USERNAME:-}
  password: ${ARLAS_SMTP_PASSWORD:-}
  from: ${ARLAS_SMTP_FROM:-}
  link: ${ARLAS_SMTP_VERIFY_LINK:-/users/%s/verify/%s}
  template_dir: ${ARLAS_SMTP_TEMPLATE_DIR:-/opt/app}
  # can be localized, i.e. "verifyEmail_fr.ftlh", "verifyEmail_en.ftlh"...
  template_file: ${ARLAS_SMTP_TEMPLATE_FILE:-verifyEmail.ftlh}