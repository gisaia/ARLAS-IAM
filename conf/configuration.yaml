server:
  requestLog:
    appenders:
      - type: file
        currentLogFilename: ${ARLAS_IAM_ACCESS_LOG_FILE:-arlas-iam-access.log}
        archivedLogFilenamePattern: ${ARLAS_IAM_LOG_FILE_ARCHIVE:-arlas-iam-access-%d.log.gz}
  registerDefaultExceptionMappers: false
  type: simple
  rootPath: ${ARLAS_IAM_PREFIX:-/arlas_iam_server}
  applicationContextPath: ${ARLAS_IAM_APP_PATH:-/}
  adminContextPath: ${ARLAS_IAM_ADMIN_PATH:-/admin}
  connector:
    type: http
    port: ${ARLAS_IAM_PORT:-9997}
  maxThreads: ${ARLAS_IAM_MAX_THREADS:-1024}
  minThreads: ${ARLAS_IAM_MIN_THREADS:-8}
  maxQueuedRequests: ${ARLAS_IAM_MAX_QUEUED_REQUESTS:-1024}

logging:
  level: ${ARLAS_IAM_LOGGING_LEVEL:-INFO}
  loggers:
    "javax.management.mbeanserver": ${ARLAS_IAM_LOGGING_MBEAN_LEVEL:-INFO}
    "org.hibernate": ${ARLAS_IAM_LOGGING_HIBERNATE_LEVEL:-INFO}
    "org.eclipse.jetty": ${ARLAS_IAM_LOGGING_JETTY_LEVEL:-INFO}
  appenders:
    - type: console
      threshold:  ${ARLAS_IAM_LOGGING_CONSOLE_LEVEL:-INFO}
    - type: file
      currentLogFilename: ${ARLAS_IAM_LOGGING_FILE:-arlas-iam.log}
      threshold: ${ARLAS_IAM_LOGGING_FILE_LEVEL:-INFO}
      archive: ${ARLAS_IAM_LOGGING_FILE_ARCHIVE:-true}
      archivedLogFilenamePattern: ${ARLAS_IAM_LOGGING_FILE_ARCHIVE_FILE_PATTERN:-arlas-iam-%d.log}
      archivedFileCount: ${ARLAS_IAM_LOGGING_FILE_ARCHIVE_FILE_COUNT:-5}

swagger: # Configuration of SWAGGER for generating documentation and APIs
  resourcePackage: io.arlas.iam.rest.service # The java package to process for extracting the APIs
  # temporary patch for bug https://github.com/smoketurner/dropwizard-swagger/issues/206
  # to be removed when version of dropwizard.swagger.version is upgraded
  customJavascript: ${ARLAS_IAM_CUSTOM_JS:-/arlas_iam_server/swagger-static/custom-request-interceptor.js}

arlas_cors:
  enabled: ${ARLAS_CORS_ENABLED:-true}
  allowed_origins: ${ARLAS_CORS_ALLOWED_ORIGINS:-"*"}
  allowed_headers: ${ARLAS_CORS_ALLOWED_HEADERS:-"arlas-user,arlas-groups,arlas-organization,arlas-org-filter,X-Requested-With,Content-Type,Accept,Origin,Authorization,WWW-Authenticate"}
  allowed_methods: ${ARLAS_CORS_ALLOWED_METHODS:-"OPTIONS,GET,PUT,POST,DELETE,HEAD"}
  allowed_credentials: ${ARLAS_CORS_ALLOWED_CREDENTIALS:-true}
  exposed_headers: ${ARLAS_CORS_EXPOSED_HEADERS:-"Content-Type,Authorization,X-Requested-With,Content-Length,Accept,Origin,Location,WWW-Authenticate"}

arlas_auth:
  # Access token time to live in millisecond
  access_token_ttl: ${ARLAS_ACCESS_TOKEN_TTL:-600000}
  # Refresh token time to live in millisecond
  refresh_token_ttl: ${ARLAS_REFRESH_TOKEN_TTL:-600000}
  # Verify token time to live in millisecond
  verify_token_ttl: ${ARLAS_VERIFY_TOKEN_TTL:-86400000}
  public_uris: [${ARLAS_AUTH_PUBLIC_URIS:-swagger,swagger.*,session:POST,session/refresh:PUT,users:POST,users/.*:POST,organisations/check:GET}]
  header_user: ${ARLAS_HEADER_USER:-arlas-user}
  header_group: ${ARLAS_HEADER_GROUP:-arlas-groups}
  anonymous_value: ${ARLAS_ANONYMOUS_VALUE:-anonymous}
  claim_roles: ${ARLAS_CLAIM_ROLES:-http://arlas.io/roles}
  claim_permissions: ${ARLAS_CLAIM_PERMISSIONS:-http://arlas.io/permissions}
  init:
    admin: ${ARLAS_AUTH_INIT_ADMIN:-auth.arlas.cloud@gisaia.com}
    password: ${ARLAS_AUTH_INIT_PASSWORD:-admin}
    timezone: ${ARLAS_AUTH_INIT_TIMEZONE:-Europe/Paris}
    locale: ${ARLAS_AUTH_INIT_LOCALE:-en}

# set this to "false" if you don't want new users to verify their email
verify_email: ${ARLAS_IAM_VERIFY_EMAIL:-true}

# Whether private organisations are created
create_private_org: ${ARLAS_IAM_PRIVATE_ORG:-false}

# API key max TTL in days
api_key_max_ttl: ${ARLAS_IAM_API_KEY_MAX_TTL:-365}

database:
  # the name of your JDBC driver
  driverClass: ${ARLAS_IAM_HIBERNATE_DRIVER:-org.postgresql.Driver}
  user: ${ARLAS_IAM_HIBERNATE_USER:-pg-user}
  password: ${ARLAS_IAM_HIBERNATE_PASSWORD:-iAMs00perSecrEET}
  # the JDBC URL
  url: ${ARLAS_IAM_HIBERNATE_URL:-jdbc:postgresql://localhost:5432/arlas_iam}
  # any properties specific to your JDBC driver:
  properties:
    charSet: UTF-8
    hibernate.dialect: ${ARLAS_IAM_HIBERNATE_DIALECT:-org.hibernate.dialect.PostgreSQLDialect}
    hibernate.hbm2ddl.auto: ${ARLAS_IAM_HIBERNATE_HBM2DDL:-create-only}
    hibernate.session.events.log: false
  # the maximum amount of time to wait on an empty pool before throwing an exception
  maxWaitForConnection: 1s
  # the SQL query to run when validating a connection's liveness
  validationQuery: "/* MyApplication Health Check */ SELECT 1"
  # the minimum number of connections to keep open
  minSize: 8
  # the maximum number of connections to keep open
  maxSize: 32
  # whether or not connections will be validated before being borrowed from the pool
  checkConnectionOnBorrow: true
  # whether or not connections will be validated after being returned to the pool
  checkConnectionOnReturn: true

# SMTP configuration. Used to send account verification email.
smtp:
  activated: ${ARLAS_SMTP_ACTIVATED:-false}
  host: ${ARLAS_SMTP_HOST:-}
  port: ${ARLAS_SMTP_PORT:-25}
  username: ${ARLAS_SMTP_USERNAME:-}
  password: ${ARLAS_SMTP_PASSWORD:-}
  from: ${ARLAS_SMTP_FROM:-}
  verify_link: ${ARLAS_SMTP_VERIFY_LINK:-/users/%s/verify/%s}
  reset_link: ${ARLAS_SMTP_RESET_LINK:-/users/%s/reset/%s}
  template_dir: ${ARLAS_SMTP_TEMPLATE_DIR:-/opt/app}
  # can be localized, i.e. "verifyEmail_fr.ftlh", "verifyEmail_en.ftlh"...
  verify_template_file: ${ARLAS_SMTP_VERIFY_TEMPLATE_FILE:-verifyEmail.ftlh}
  reset_template_file: ${ARLAS_SMTP_RESET_TEMPLATE_FILE:-resetEmail.ftlh}

# Configuration of the cache
arlas_cache_factory_class: ${ARLAS_IAM_CACHE_FACTORY_CLASS:-io.arlas.commons.cache.NoCacheFactory}
arlas-cache-timeout: ${ARLAS_CACHE_TIMEOUT:-60}

# Arlas server url
arlas_server_base_path: ${ARLAS_SERVER_URL:-http://localhost:9999/}