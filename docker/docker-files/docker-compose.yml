version: '3'

services:
  db:
    image: postgres
    container_name: db
    restart: always
    environment:
      POSTGRES_USER: ${ARLAS_AUTH_HIBERNATE_USER:-pg-user}
      POSTGRES_PASSWORD: ${ARLAS_AUTH_HIBERNATE_PASSWORD:-iAMs00perSecrEET}
      POSTGRES_DB: arlas_auth
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    volumes:
      - ${ARLAS_AUTH_DATADIR:-/tmp}:/var/lib/postgresql/data

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: tech@gisaia.com
      PGADMIN_DEFAULT_PASSWORD: secret
      PGADMIN_LISTEN_PORT: 80
    ports:
      - "8080:80"
    volumes:
    # on your local host: chmod -R 777 /home/user/projects/postgis/pgadmin
    #- /home/user/projects/postgis/pgadmin/servers.json:/pgadmin4/servers.json
    #- /home/user/projects/postgis/pgadmin/data:/var/lib/pgadmin
      - ${PGA_CONFIG}:/pgadmin4/servers.json
      - ${PGA_DATADIR}:/var/lib/pgadmin

  arlas-auth-server:
    build:
      context: ../..
      dockerfile: ${DOCKERFILE:-docker/docker-files/Dockerfile-package-only}
    image: gisaia/arlas-auth-server:${ARLAS_AUTH_SERVER_VERSION:-latest}
    container_name: arlas-auth-server
    environment:
      - ARLAS_AUTH_HOST="${ARLAS_AUTH_HOST:-localhost}"
      - ARLAS_AUTH_PORT="${ARLAS_AUTH_PORT:-9997}"
      - ARLAS_AUTH_PREFIX="${ARLAS_AUTH_PREFIX:-/arlas_auth_server}"
      - ARLAS_AUTH_APP_PATH="${ARLAS_AUTH_APP_PATH:-/}"
      - ARLAS_ANONYMOUS_VALUE="${ARLAS_ANONYMOUS_VALUE:-anonymous}"
      - ARLAS_AUTH_HIBERNATE_URL="${ARLAS_AUTH_HIBERNATE_URL:-jdbc:postgresql://db:5432/arlas_auth}"
      - ARLAS_AUTH_HIBERNATE_USER="${ARLAS_AUTH_HIBERNATE_USER:-pg-user}"
      - ARLAS_AUTH_HIBERNATE_PASSWORD="${ARLAS_AUTH_HIBERNATE_PASSWORD:-iAMs00perSecrEET}"
      - ARLAS_AUTH_HIBERNATE_DRIVER="${ARLAS_AUTH_HIBERNATE_DRIVER:-org.postgresql.Driver}"
      - ARLAS_AUTH_HIBERNATE_DIALECT="${ARLAS_AUTH_HIBERNATE_DIALECT:-org.hibernate.dialect.PostgreSQLDialect}"
      - ARLAS_SMTP_ACTIVATED="${ARLAS_SMTP_ACTIVATED:-false}"
      - ARLAS_SMTP_HOST="${ARLAS_SMTP_HOST:-}"
      - ARLAS_SMTP_PORT="${ARLAS_SMTP_PORT:-}"
      - ARLAS_SMTP_USERNAME="${ARLAS_SMTP_USERNAME:-}"
      - ARLAS_SMTP_PASSWORD="${ARLAS_SMTP_PASSWORD:-}"
      - ARLAS_SMTP_FROM="${ARLAS_SMTP_FROM:-}"
      - ARLAS_SMTP_VERIFY_LINK="${ARLAS_SMTP_VERIFY_LINK:-}"
    ports:
      - "9997:9997"
    command: ["/opt/app/start.sh"]

  # to be tested
  hydra-migrate:
    image: oryd/hydra:v1.11.0
    container_name: hydra-migrate
    restart: on-failure
    command:
      migrate sql -e --yes
    environment:
      - DSN=postgres://pg-user:iAMs00perSecrEET@db:5432/arlas_auth?sslmode=disable&max_conns=20&max_idle_conns=4
    depends_on:
      - db

  hydra:
    image: oryd/hydra:v1.11.0
    container_name: hydra
    restart: on-failure
    ports:
      - "4444:4444" # Public port
      - "4445:4445" # Admin port
      - "5555:5555" # Port for hydra token user, testing purpose only
    command:
      serve all --dangerous-force-http
    environment:
      # https://www.ory.sh/hydra/docs/reference/configuration
      # https://github.com/ory/hydra/blob/aeecfe1c8f/test/e2e/docker-compose.yml
      - SECRETS_SYSTEM=this-is-the-primary-secret # length >=16
      - URLS_LOGIN=http://localhost:9997/arlas/wui/login # Sets the login endpoint of the User Login & Consent flow.
      - URLS_CONSENT=http://localhost:8000/arlas/wui/consent # Sets the consent endpoint of the User Login & Consent flow.

      # set to Hydra public domain
      - URLS_SELF_PUBLIC=http://localhost:4444 # to public endpoint
      - URLS_SELF_ISSUER=http://localhost:4444 # to public endpoint
      - DSN=postgres://pg-user:iAMs00perSecrEET@db:5432/arlas_auth?sslmode=disable&max_conns=20&max_idle_conns=4
      - SERVE_PUBLIC_PORT=4444
      - SERVE_PUBLIC_HOST=0.0.0.0
      - SERVE_PUBLIC_CORS_ENABLED=true
      - SERVE_ADMIN_PORT=4445
      - LOG_LEVEL=debug
    depends_on:
      - db
