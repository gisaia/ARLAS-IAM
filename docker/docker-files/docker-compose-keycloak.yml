#docker-compose -f docker-compose-keycloak.yml up -d
#docker-compose -f docker-compose-keycloak.yml down -v
version: '3'

volumes:
  postgres_data:
    driver: local

services:
  postgres:
    container_name: db
    image: postgres
    volumes:
    - ${KC_DATADIR}:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: password
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: tech@gisaia.com
      PGADMIN_DEFAULT_PASSWORD: secret
      PGADMIN_LISTEN_PORT: 80
    ports:
    - "8081:80"
    volumes:
    # on your local host: chmod -R 777 /home/user/projects/postgis/pgadmin
    #- /home/user/projects/postgis/pgadmin/servers.json:/pgadmin4/servers.json
    #- /home/user/projects/postgis/pgadmin/data:/var/lib/pgadmin
    - ${PGA_CONFIG}:/pgadmin4/servers.json
    - ${PGA_DATADIR}:/var/lib/pgadmin
  keycloak:
    container_name: keycloak
    image: jboss/keycloak:16.1.1
#    image: quay.io/keycloak/keycloak:latest
    environment:
      DB_VENDOR: POSTGRES
      DB_ADDR: postgres
      DB_DATABASE: keycloak
      DB_USER: keycloak
      DB_SCHEMA: public
      DB_PASSWORD: password
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: admin
      JAVA_OPTS_APPEND: "-Dkeycloak.profile.feature.admin_fine_grained_authz=enabled"
      KEYCLOAK_LOGLEVEL: INFO
      # Uncomment the line below if you want to specify JDBC parameters. The parameter below is just an example, and it shouldn't be used in production without knowledge. It is highly recommended that you read the PostgreSQL JDBC driver documentation in order to use it.
      #JDBC_PARAMS: "ssl=true"
    ports:
      - 8080:8080
    depends_on:
      - postgres
#    command:
#      - start-dev